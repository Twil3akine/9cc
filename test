#!/bin/zsh

assert() {
  expected="${1}"
  input="${2}"

  ./9cc "${input}" > tmp.s
  cc -o tmp tmp.s
  ./tmp
  actual="$?"

  if [ "${actual}" = "${expected}" ]; then
    echo "${input} => ${actual}"
  else
    echo "${input} => ${expected} expected, but got ${actual}"
    exit 1
  fi
}

echo "\n単項(0~255)のコンパイル"
assert 0 0
assert 42 42

echo "\n空白の内、足し引きの式"
assert 21 "5+20-4"
assert 48 "16+16+16-16+16"

echo "\n空白が入った足し引きの式"
assert 32 "16 + 16 - 0"
assert 0 "1 + 50     -1-     50"

echo "\nビット演算(&, |, ^)の式"
assert 7 "4 |3"
assert 16 "31& 16"
assert 3 "1   ^   2"

echo "\n掛け割りの式"
assert 30 "5*6"
assert 10 "2*5/5*10/2"
assert 20 "3*3*3 / 3 / 3 /3*20"

echo "\n四則演算の式"
assert 17 "3*5+2"
assert 12 "2/2+2-48/3+4/4+6*4"

echo "\n括弧を含む式"
assert 9 "(1+2)*(4-1)"
assert 12 "(2+2)*(9/(1+2))/(6-5)"

echo "\nTEST OK"
